{"ts":1350282287496,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":true,"ts":1350282323497,"patch":[[{"diffs":[[1,"#"]],"start1":0,"start2":0,"length1":0,"length2":1}]],"length":1,"saved":false}
{"ts":1350282328786,"patch":[[{"diffs":[[0,"#"],[1,"Redis P"]],"start1":0,"start2":0,"length1":1,"length2":8}]],"length":8,"saved":false}
{"ts":1350282331754,"patch":[[{"diffs":[[0,"dis "],[-1,"P"],[1,"Mul"]],"start1":3,"start2":3,"length1":5,"length2":7}]],"length":10,"saved":false}
{"ts":1350282333208,"patch":[[{"diffs":[[0,"edis Mul"],[1,"tipl"]],"start1":2,"start2":2,"length1":8,"length2":12}]],"length":14,"saved":false}
{"ts":1350282334660,"patch":[[{"diffs":[[0," Multipl"],[1,"exer"]],"start1":6,"start2":6,"length1":8,"length2":12}]],"length":18,"saved":false}
{"ts":1350282335667,"patch":[[{"diffs":[[0,"tiplexer"],[1,"\n"]],"start1":10,"start2":10,"length1":8,"length2":9}]],"length":19,"saved":false}
{"ts":1350282337401,"patch":[[{"diffs":[[0,"iplexer\n"],[1,"This "]],"start1":11,"start2":11,"length1":8,"length2":13}]],"length":24,"saved":false}
{"ts":1350282737711,"patch":[[{"diffs":[[0,"er\nThis "],[1,"library is an attempt to create some kind of multiplexer to build a\nmulti-master setup for redis. We are encountering the problem to have two data-\ncenters and two write masters with their corresponding slaves.\n\nThe multiplexer should run once for each location that has a preferred master\nto write to and it should declare it as primary.\n\n## Concept\nThe concept is simple. The multiplexer opens connections to all given servers.\nThe primary connection is held separate, the other ones are managed by a simple\nlist.\n\nThe result is always returned by the primary server, the other servers are\nhandled as fire-and-forget.\n\n## Stability\nThe multiplexer has no reasonable stability yet. DO NOT USE IT IN PRODUCTION."]],"start1":16,"start2":16,"length1":8,"length2":719}]],"length":735,"saved":false}
